;; Object lang/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "lang/"
  :tables (list 
     (semanticdb-table "IPersistentCollection.h"
    :major-mode 'c++-mode
    :tags 
        '( ("__clojure__IPersistentCollection__" variable (:constant-flag t) nil [201 235])
            ("iostream" include (:system-flag t) nil [237 256])
            ("IPersistentCollection" type
               (:template 
                  ( ("T" type (:type "class") nil nil))                  
                :type "class"
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [310 317])
                    ("_conj" function
                       (:prototype-flag t
                        :typemodifiers ("virtual")
                        :arguments 
                          ( ("coll" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [337 344]))                          
                        :type ("T" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [320 345]))                  )
                nil [258 348]))          
    :file "IPersistentCollection.h"
    :pointmax 424
    :fsize 423
    :lastmodtime '(21273 880 0 0)
    :unmatched-syntax 'nil
    :lexical-table 
        '(("__clojure__IPersistentCollection__")
          )

    )
   (semanticdb-table "ISeq.h"
    :major-mode 'c++-mode
    :tags 
        '( ("__clojure__ISeq__" variable (:constant-flag t) nil [167 184])
            ("iostream" include (:system-flag t) nil [186 205])
            ("ISeq" type
               (:template 
                  ( ("T" type (:type "class") nil nil))                  
                :type "class"
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [242 249])
                    ("_first" function
                       (:prototype-flag t
                        :typemodifiers ("virtual")
                        :arguments 
                          ( ("coll" variable (:type ("ISeq" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [271 281]))                          
                        :type ("T" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [253 282])
                    ("_rest" function
                       (:prototype-flag t
                        :typemodifiers ("virtual")
                        :arguments 
                          ( ("coll" variable (:type ("ISeq" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [305 315]))                          
                        :type ("ISeq" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [285 316]))                  )
                nil [207 319]))          
    :file "ISeq.h"
    :pointmax 361
    :fsize 360
    :lastmodtime '(21273 890 0 0)
    :unmatched-syntax 'nil
    :lexical-table 
        '(("__clojure__ISeq__")
          )

    )
     (semanticdb-table "ISeqable.h"
    :major-mode 'c++-mode
    :tags 
        '( ("__clojure__ISeqable__" variable (:constant-flag t) nil [175 196])
            ("iostream" include (:system-flag t) nil [198 217])
            ("ISeqable" type
               (:template 
                  ( ("T" type (:type "class") nil nil))                  
                :type "class"
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [258 265])
                    ("_seq" function
                       (:prototype-flag t
                        :typemodifiers ("virtual")
                        :arguments 
                          ( ("obj" variable (:type ("ISeqable" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [284 297]))                          
                        :type ("T" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [268 298]))                  )
                nil [219 301]))          
    :file "ISeqable.h"
    :pointmax 364
    :fsize 363
    :lastmodtime '(21273 5556 0 0)
    :unmatched-syntax 'nil
    :lexical-table 
        '(("__clojure__ISeqable__")
          )

    )
   (semanticdb-table "StringBuffer.h"
    :major-mode 'c++-mode
    :tags 
        '( ("__clojure__StringBuffer__" variable (:constant-flag t) nil [183 208])
            ("iostream" include (:system-flag t) nil [210 229])
            ("StringBuffer" type
               (:members 
                  ( ("private" label nil (reparse-symbol classsubparts) [297 305])
                    ("buffer" variable (:type ("std::string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [308 327])
                    ("public" label nil (reparse-symbol classsubparts) [329 336])
                    ("StringBuffer" function
                       (:constructor-flag t
                        :arguments 
                          ( ("" variable (:type ("Arguments" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [353 363])
                            ("" variable (:type ("var_args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [366 375]))                          
                        :type ("StringBuffer" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [339 378])
                    ("StringBuffer" function
                       (:constructor-flag t
                        :arguments 
                          ( ("opt_arg1" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [395 406])
                            ("" variable (:type ("Arguments" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [407 417])
                            ("" variable (:type ("var_args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [420 429]))                          
                        :type ("StringBuffer" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [381 432])
                    ("set" function
                       (:prototype-flag t
                        :arguments 
                          ( ("s" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [445 449]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [435 450])
                    ("append" function
                       (:prototype-flag t
                        :arguments 
                          ( ("a1" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [474 479])
                            ("" variable (:type ("Arguments" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [480 490])
                            ("" variable (:type ("var_args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [493 502]))                          
                        :type ("StringBuffer" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [453 503])
                    ("append" function
                       (:prototype-flag t
                        :arguments 
                          ( ("a1" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [527 532])
                            ("opt_a2" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [533 542])
                            ("" variable (:type ("Arguments" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [543 553])
                            ("" variable (:type ("var_args" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [556 565]))                          
                        :type ("StringBuffer" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [506 566])
                    ("clear" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [569 583])
                    ("getLength" function
                       (:prototype-flag t
                        :type "int")
                        (reparse-symbol classsubparts) [586 603])
                    ("toString" function
                       (:prototype-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [606 630])
                    ("StringBuffer" function
                       (:destructor-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [633 652]))                  
                :type "class")
                nil [275 655]))          
    :file "StringBuffer.h"
    :pointmax 721
    :fsize 720
    :lastmodtime '(21273 6484 0 0)
    :unmatched-syntax '((punctuation 554 . 555) (punctuation 553 . 554) (punctuation 552 . 553) (punctuation 491 . 492) (punctuation 490 . 491) (punctuation 489 . 490) (punctuation 418 . 419) (punctuation 417 . 418) (punctuation 416 . 417) (punctuation 364 . 365) (punctuation 363 . 364) (punctuation 362 . 363) (punctuation 273 . 274) (symbol 264 . 273) (punctuation 262 . 263) (punctuation 261 . 262) (punctuation 260 . 261) (TYPENAME 252 . 260) (punctuation 250 . 251) (symbol 249 . 250) (TYPENAME 240 . 248) (punctuation 239 . 240) (TEMPLATE 231 . 239) (punctuation 554 . 555) (punctuation 553 . 554) (punctuation 552 . 553) (punctuation 491 . 492) (punctuation 490 . 491) (punctuation 489 . 490) (punctuation 418 . 419) (punctuation 417 . 418) (punctuation 416 . 417) (punctuation 364 . 365) (punctuation 363 . 364) (punctuation 362 . 363) (punctuation 273 . 274) (symbol 264 . 273) (punctuation 262 . 263) (punctuation 261 . 262) (punctuation 260 . 261) (TYPENAME 252 . 260) (punctuation 250 . 251) (symbol 249 . 250) (TYPENAME 240 . 248) (punctuation 239 . 240) (TEMPLATE 231 . 239))
    :lexical-table 
        '(("__clojure__StringBuffer__")
          )

    )
   (semanticdb-table "StringBuffer.cpp"
    :major-mode 'c++-mode
    :tags 
        '( ("StringBuffer.h" include nil nil [143 168]))          
    :file "StringBuffer.cpp"
    :pointmax 531
    :fsize 538
    :lastmodtime '(21273 6602 0 0)
    :unmatched-syntax 'nil
    )
   )
  :file "!Users!adrian!workspace!c!clojure!clojure!lang!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2"
  )
